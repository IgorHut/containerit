% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dockerfile.R
\name{dockerfile}
\alias{dockerfile}
\title{dockerfile-method}
\usage{
dockerfile(from = utils::sessionInfo(), objects = character(0),
  maintainer = Maintainer(name = Sys.info()[["user"]]),
  r_version = getRVersionTag(from), image = imagefromRVersion(r_version),
  env = list(generator = paste("containeRit",
  utils::packageVersion("containeRit"))), context = "workdir", soft = FALSE,
  copy = "script", container_workdir = "payload/", cmd = Cmd("R"))
}
\arguments{
\item{from}{(sessionInfo, file or a string specifying the path to a workspace) The source of the information to construct the Dockerfile}

\item{objects}{character vector naming all R objects to be included in the docker image / R session. Can be character(0) (default), ls() or a fraction of ls()}

\item{maintainer}{optionally specify the maintainer of the dockerfile. See the \code{Maintainter-class} and the official documentation: \url{'https://docs.docker.com/engine/reference/builder/#maintainer'}}

\item{r_version}{(character) optionally specify the R version that should run inside the container. By default, the R version from the given sessioninfo is used (if applicable) or the version of the currently running R instance}

\item{image}{(From-object or character) optionally specify the image that shall be used for the docker container (FROM-statement)
By default, the image is determinded from the given r_version, while the version is matched with tags from the base image rocker/r-ver
see details about the rocker/r-ver at \url{'https://hub.docker.com/r/rocker/r-ver/'}}

\item{env}{optionally specify environment variables to be included in the image. See documentation: \url{'https://docs.docker.com/engine/reference/builder/#env}}

\item{context}{(character) optionally specify a build context (path /url); the default key "workdir", assuming that the image will be build from the current working directory as returned by getwd()}

\item{soft}{(boolean) Whether to include soft dependencies when system dependencies are installed}

\item{copy}{whether and how a workspace should be copied - values: "script", "script_dir" or a list of relative file paths to be copied}

\item{container_workdir}{the working directory of the container}

\item{cmd}{The CMD statement that should be executed by default when running a parameter. Use cmd_Rscript(path) in order to reference an R script to be executed on startup}
}
\value{
An object of class Dockerfile
}
\description{
Create a Dockerfile based on either a sessionInfo, a workspace or a file
}
\examples{
dockerfile()

}

